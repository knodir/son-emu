Get enterprise traces from
http://downloads.digitalcorpora.org/corpora/scenarios/2009-m57-patents/net/

We use net-2009-11-13-09-24.pcap trace as it is the largest single
trace (around 400 MB).

Convert enterprise traces

tcprewrite --fixcsum --skipbroadcast --infile=net-2009-11-13-09-24.pcap --outfile=output.pcap --srcipmap=0.0.0.0/0:10.0.0.2/32 --dstipmap=0.0.0.0/0:10.8.0.1/32 --enet-smac=00:00:00:00:00:01 --enet-dmac=00:00:00:00:00:02

Here:
- net-2009-11-13-09-24.pcap is name of the enterprise pcap file
- 10.0.0.2/32 is the IP address of the client VNF
- 10.8.0.1 is IP address of the tun0 in the server VNF
- 00:00:00:00:00:01 is the MAC address of the client intf1 interface
- 00:00:00:00:00:02 is the MAC address of the NAT VNF input interface
  (the port directly connected to the client intf1 interface). Putting
the next hop MAC address guarantees correct L2 packet path, while
putting server VNF's intf2 MAC does not.

Copy pcap file to client VNF

$ sudo docker cp scenarios/traces/output.pcap mn.client:/

Go to the client VNF and run the following tcpreplay command

$ sudo docker exec -it mn.client /bin/bash
$ sudo tcpreplay --topspeed -d 2 --intf1=intf1 ./output.pcap

We can also replay specific number of packets per second:
$ sudo tcpreplay --pps=25 -d 2 --intf1=intf1 ./output.pcap

Or play specific throughput
$ sudo tcpreplay --mbps=10.0 -d 2 --intf1=intf1 ./output.pcap


Generate FTP packets with following commands.

$ python gen-ftp.py

This directly writes packet captures into pcap file. Here, packets have source MAC/IP 00:00:00:00:00:01/10.0.0.2 (for client VNF) and destination MAC/IP 00:00:00:00:00:02/10.8.0.1 (for NAT MAC and server VNF IP). 

If you want to replay this pcap in different environment, then you need to do following two steps to rewrite packet MAC/IP values.

1) Rewrite MAC addresses (layer 2).

tcprewrite --fixcsum --skipbroadcast --infile=ftp.raw.pcap --dlt=enet --outfile=ftp.mac.pcap --enet-smac=00:00:00:00:00:01 --enet-dmac=00:00:00:00:00:02

Note that "--dlt=enet" flag is needed to indicate these are ethernet
packets. Packets generated by scapy script are directly captured from
the raw interface therefore do not have any MAC address. Without this
flag tcprewrite throws following error:

Fatal Error in tcpedit.c:tcpedit_packet() line 114:
 From ./plugins/dlt_raw/raw.c:dlt_raw_encode() line 216:
DLT_RAW plugin does not support packet encoding

See solution details here
http://www.linuxquestions.org/questions/linux-newbie-8/%5Bsolved%5D-fatal-error-raw-c-dlt_raw_encode-dlt_raw-plugin-does-not-support-packet-encoding-841853/

2) Rewrite layer 3 (source and destination IP addresses).

tcprewrite --fixcsum --skipbroadcast --infile=ftp.mac.pcap --outfile=ftp.ready.pcap --srcipmap=0.0.0.0/0:10.0.0.2/32 --dstipmap=0.0.0.0/0:10.8.0.1/32


Go to the client VNF and run the following tcpreplay command:

$ sudo docker exec -it mn.client /bin/bash
$ sudo tcpreplay --topspeed -d 2 --intf1=intf1 ./ftp.ready.pcap

You can get more information about command line options.

http://yy27.blogspot.ca/2015/01/replaying-packets-with-tcpreplay.html
http://tcpreplay.synfin.net/wiki/usage
http://tcpreplay.synfin.net/wiki/tcpreplay
http://tcpreplay.synfin.net/wiki/tcprewrite
